{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://github.com/http-everytning/httpe/main/pkg/rules/schema.json",
  "title": "Httpe routes",
  "description": "Definition of routes and linked actions for the httpe server",
  "type": "array",
  "items": {
    "type": "object",
    "name": {
      "description": "unique name of rule",
      "type": "string"
    },
    "on": {
      "description": "definition of the trigger for the 'do' action, case-sensitive",
      "type": "object",
      "properties": {
        "path": {
          "description": "path of the URL",
          "type": "string"
        },
        "methods": {
          "description": "http methods, case-insensitive",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "get",
              "post",
              "put",
              "delete",
              "options",
              "any"
            ]
          }
        }
      },
      "required": [
        "path",
        "methods"
      ]
    },
    "do": {
      "description": "definition of what to do if request matches the route",
      "type": "object",
      "properties": {
        "name": {
          "description": "unique name of the action to be executed",
          "type": "string"
        },
        "execute": {
          "description": "a command or script to execute, supports templating",
          "type": "string"
        },
        "args": {
          "description": "options for the module",
          "type": "object",
          "properties": {
            "interpreter": {
              "description": "interpreter used to execute the command or script such as '/bin/bash' or 'powershell'",
              "type": "string"
            },
            "timeout": {
              "description": "timeout (seconds, float) after which the script execution will be aborted",
              "type": "number"
            }
          }
        },
        "required": [
          "name",
          "execute"
        ]
      }
    },
    "with": {
      "description": "optional options applied to the request",
      "type": "object",
      "properties": {
        "auth_basic": {
          "description": "Require http basic authentication",
          "type": "array",
          "items": {
            "properties": {
              "username": {
                "description": "username",
                "type": "string"
              },
              "password": {
                "description": "password",
                "type": "string"
              },
              "hash": {
                "type": "string",
                "description": "hashing algorithm, 'none' equals clear text",
                "enum": [
                  "none",
                  "sha256",
                  "sha512"
                ]
              }
            }
          }
        }
      }
    },
    "respond": {
      "description": "optional definition of the response",
      "type": "object",
      "properties": {
        "on_success": {
          "description": "What to respond if script terminates successfully (exit code = 0)",
          "type": "object",
          "properties": {
            "http_status": {
              "description": "http status code of the success response, supports templating",
              "type": "integer"
            },
            "body": {
              "description": "http body of the success response",
              "type": "string"
            }
          }
        },
        "on_error": {
          "description": "What to respond if script terminates with an error (exit code > 0)",
          "type": "object",
          "properties": {
            "http_status": {
              "description": "http status code of the error response",
              "type": "integer"
            },
            "body": {
              "description": "http body of the error response, supports templating",
              "type": "string"
            }
          }
        },
        "with_headers": {
          "description": "optional http headers send with the response, applies to success and error response",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string"
            }
          }
        }
      }
    },
    "required": [
      "name",
      "on",
      "do"
    ]
  }
}