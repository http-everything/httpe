rules:
  - name: Execute some commands
    on:
      path: /commands/1
      methods:
        - get
        - post
    do:
      run.script: |
        date
        id
        whoami
      args:
        interpreter: /bin/bash
        timeout: 2
    with:
      auth_basic:
        - username: john.doe
          password: 5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8
        - username: jane.doe
          password: 1b8e84ccf80aae39e1ca16393920c801a8fb78c5ae8ce5e6a5d636baa3d9386d
      auth_hashing: sha256
    respond:
      on_success:
        http_status: 200
        body: |
          The script says: 
          {{ .Action.SuccessBody }}
          -- End of Script output ---
          Script Errors:
          {{ .Action.ErrorBody }}
  - name: Execute some more commands
    on:
      path: /commands/2
    do:
      run.script: "{{ .Input.Form.Script }}"
      args:
        timeout: 3
    respond:
      on_error:
        body: |
          Your script '{{ .Input.Form.Script }}' has failed with: 
            Stderr: {{ .Action.ErrorBody }}
            Stdout: {{ .Action.SuccessBody }}
          Exit Code: {{ .Action.Code }}
      on_success:
        body: |
          Your script '{{ .Input.Form.Script }}' returns:
          {{ .Action.SuccessBody }}
          {{ .Action.ErrorBody }}
  - name: execute python
    on:
      path: /commands/3
    do:
      run.script: |
        import platform
        print(platform.python_version())
      args:
        interpreter: python3

  - name: Respond with text
    on:
      path: /text
    do:
      answer.content: "foo {{ .Meta.UserAgent |ToUpper }}"

    with_headers:
      Content-Type: text

  - name: path with placeholder
    on:
      path: /prefix/{var1}
    do:
      answer.content: |
        Var 1 = {{ .Input.URLPlaceholders.var1 }}
        URL = {{ .Meta.URL }}

  - name: path with placeholder
    on:
      path: /prefix2/:id
    do:
      answer.content: |
        Var 1 = {{ .Input.URLPlaceholders.id }}
        URL = {{ .Meta.URL }}

  - name: redirect perm
    on:
      path: /redirect/perm
    do:
      redirect.permanent: http://www.google.de
    respond:
      on_success:
        headers:
          Location: https://"{{ .Meta.UserAgent }}"

  - name: redirect temp
    on:
      path: /redirect/tmp/{new_loc}
    do:
      redirect.temporary: https://{{ .Input.URLPlaceholders.new_loc }}

  - name: text answer
    on:
      path: /answer
    do:
      answer.content: |
        This is my answer.
        This is your Form Input:
        {{- range $key,$value := .Input.Form }}
        * {{ $key }}: {{ $value }}
        {{- end }}
        
        This is your Json Input:
        {{- range $key,$value := .Input.JSON }}
        * {{ $key }}: {{ $value }}
        {{- end }}
        
        These are your URL Parameters:
        {{- range $key,$value := .Input.Params }}
        * {{ $key }}: {{ $value }}
        {{- end }}
        
        These are your headers:
        {{- range $key,$values := .Meta.Headers }}
        * {{ $key }}: {{ $values }}
        {{- end }}
        
        This is the first file upload:
        {{ $upload := index .Input.Uploads 0 }}
        {{ $upload.FieldName }}
        {{ $upload.FileName }}
        {{ $upload.Stored }}
        {{ $upload.Type }}
        
        
        User Agent: {{ .Meta.UserAgent }}
        Method: {{ .Meta.Method }}
        URL: {{ .Meta.URL }}
        -- End of Answer --
    with:
      max_request_body: 5MB

  - name: Serve Dir
    on:
      path: /dir
    do:
      serve.directory: /Users/thorsten/tmp/

  - name: ping
    on:
      path: /ping
    do:
      run.script: ping -n 60 127.0.0.1
      args:
        timeout: 5